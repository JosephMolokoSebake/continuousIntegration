// ISA16_NTioctl.h
//
// Define control codes for ISA16_NT driver
//

#ifndef __ISA16_NTioctl__h_
#define __ISA16_NTioctl__h_

#define ISA16_NT_DRIVER_VERSION 1010

#define ISA16_NT_WR CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_RD CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_BWR CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_BRD CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_WRBYTE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_RDBYTE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_BWRBYTE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_BRDBYTE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define ISA16_NT_VERSION CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS)

#pragma option push -a4    //Set compiler to DWORD alignment

struct ISA16_NT_READPARAMS
{
	ULONG dwIndex;
	ULONG dwNum;
};

struct ISA16_NT_WRITEPARAMS
{
	ULONG dwIndex;
	ULONG dwData;
};

struct ISA16_NT_BUFWRITEPARAMS
{
	ULONG dwIndex;
	ULONG dwNum;
	PUSHORT puData;
};

struct ISA16_NT_BUFWRITEBYTEPARAMS
{
	ULONG dwIndex;
	ULONG dwNum;
	PUCHAR pucData;
};

#pragma option pop    //Set compiler to default alignment

#endif
